import datetime
from aspen.utils import to_age, utc

nav_title = "Product Overview"
YEAR = datetime.timedelta(days=365)
[---]

issues = {}
issues[1074] = '2014-07-21'
issues[1369] = '2014-02-26'

now = datetime.datetime.now(tz=utc)

def lr(issue=None):

    if issue is None:
        cls = "too-long-ago"
        href = "https://github.com/gittip/www.gittip.com/issues/new"
        text = "never"
    elif issue not in issues:
        cls = "future"
        href = 'https://github.com/gittip/www.gittip.com/issues/{}'.format(issue)
        text = '#{}'.format(issue)
    else:
        year, month, day = [int(x) for x in issues[issue].split('-')]
        last_refactored = datetime.datetime(year, month, day, tzinfo=utc)
        print(now - last_refactored, YEAR)
        if (now - last_refactored) > YEAR:
            cls = "too-long-ago"
        else:
            cls = "past"
        href = 'https://github.com/gittip/www.gittip.com/issues/{}'.format(issue)
        text = to_age(last_refactored)

    return '<a class="refactored {}" href="{}">{}</a>'.format(cls, href, text)
[---] text/html

Gittip is a way to make and receive weekly payments motivated by gratitude.
This document is our top-level information architecture. These are all the
main parts of our app, with links to issues to drill down.

Last Refactored | Part
--------------- | -----------------------------------
{{ lr(1074) }}  | Homepage (unauthenticated)
{{ lr(2584) }}  | Homepage (authenticated)
{{ lr() }}      | Onboarding Flow
{{ lr() }}      | About
{{ lr() }}      | Profile - Basic Info
{{ lr() }}      | Profile - Giving
{{ lr() }}      | Profile - Receiving
{{ lr(838) }}   | Profile - History &amp; Billing
{{ lr() }}      | Profile - Widgets
{{ lr() }}      | Profile - Account
{{ lr() }}      | Profile - Event Log
{{ lr() }}      | Profile - Payroll
{{ lr() }}      | Community
{{ lr(1369) }}  | Accounts Elsewhere
{{ lr(1167) }}  | Widgets &amp; Embeds
{{ lr() }}      | Gittip Everywhere
{{ lr(2508) }}  | Payday
{{ lr() }}      | API
